name: Infra + API Deployment

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE: ${{ secrets.AWS_ROLE }}
  AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
  AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    outputs:
      ec2_ip: ${{ steps.tf-output.outputs.ec2_ip }}
      rds_endpoint: ${{ steps.tf-output.outputs.rds_endpoint }}
      rds_db_name: ${{ steps.tf-output.outputs.rds_db_name }}

    defaults:
      run:
        working-directory: ./infra/setup
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Debug OIDC token
      run: |
        TOKEN=$(curl -sSL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
        "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=sts.amazonaws.com" | jq -r '.value')
        echo "$TOKEN" | cut -d "." -f2 | base64 -d | jq


    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ env.AWS_ROLE }}
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GitHub-OIDC-TERRAFORM

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.5

    - name: Terraform Init
      env:
        AWS_BUCKET_NAME: ${{ env.AWS_BUCKET_NAME }}
        AWS_BUCKET_KEY_NAME: ${{ env.AWS_BUCKET_KEY_NAME }}
      run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      run: terraform plan 
      continue-on-error: true

    - name: Terraform Apply
      run: terraform apply -auto-approve -input=false

  deploy:
    runs-on: ubuntu-latest
    needs: terraform  # Runs only after Terraform job succeeds
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: npm install

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.AWS_EC2_HOST }}
        USER: ec2-user
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << EOF
          
          # Ensure repo exists
        cd ~/project_DevOps
        cat <<EOT > .env
        DB_HOST=${{ secrets.rds_endpoint }}
        DB_PORT=5432
        DB_USER=${{ secrets.DB_USER }}
        DB_PASSWORD=${{ secrets.DB_PASSWORD }}
        DB_NAME=${{ secrets.rds_db_name }}
        EOT
        # pull changes
        git fetch origin main 
        git reset --hard origin/main
        npm install 
        if ! command -v pm2 >/dev/null 2>&1; then
          sudo npm install -g pm2
        fi
        pm2 restart all || pm2 start app.js --name "myapp" --update-env
        EOF
