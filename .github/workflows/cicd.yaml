# name: Infra + API Deployment

# on:
#   push:
#     branches:
#       - main  

# jobs:
#   terraform:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: terraform

#     steps:
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     - name: Install Terraform
#       uses: hashicorp/setup-terraform@v2

#     - name: Initialize Terraform
#       run: terraform init

#     - name: Validate Terraform
#       run: terraform validate

#     - name: Apply Terraform Changes
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       run: terraform apply -auto-approve

name: Infra Deployment

on:
  push:
    branches:
      - main  # Runs on push to the main branch

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # ðŸ”¹ Configure AWS Credentials using OIDC (Recommended)
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::977952712667:role/TerraformBackendrole # Replace with your IAM role
        aws-region: eu-central-1

    # ðŸ”¹ Initialize Terraform with S3 backend
    - name: Initialize Terraform
      run: terraform init -backend=true

    # ðŸ”¹ Validate Terraform files
    - name: Validate Terraform
      run: terraform validate

    # ðŸ”¹ Apply Terraform changes
    - name: Apply Terraform Changes
      run: terraform apply -auto-approve

  deploy:
    runs-on: ubuntu-latest
    needs: terraform  # Runs only after Terraform job succeeds
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Dependencies
      run: npm install

    - name: Run Tests
      run: npm test

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.AWS_EC2_HOST }}
        USER: ec2-user
      run: |
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST << 'EOF'
          cd ~/project_DevOps
          git pull origin main
          npm install 
          pm2 restart all
        EOF
